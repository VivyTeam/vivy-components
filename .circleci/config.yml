version: 2
jobs:
  build:
    docker:
      - image: circleci/node:11.9.0-browsers

    working_directory: ~/repo

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: npm install
      - run: npm run build:static

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - persist_to_workspace:
          root: ~/repo
          paths: .

  test:
    docker:
      - image: circleci/node:11.9.0-browsers

    working_directory: ~/repo

    steps:
      - attach_workspace:
          at: ~/repo

      - run: npm run linter:check
      - run: npm test
      - run: npm run danger
      - run: npm run test:visual

      # Allow us to see failed storyshot diff files in the circle CI artifacts UI
      - store_artifacts:
          path: ~/repo/tests/__image_snapshots__/__diff_output__
          destination: storyshot-diffs

  pr-preview:
    docker:
      - image: circleci/node:11.9.0

    working_directory: ~/repo

    steps:
      - attach_workspace:
          at: ~/repo

      # Deploy PR-Preview
      - run:
          name: PR Preview Storybook
          command: |
            yarn run surge --project storybook-static --domain ${CIRCLE_SHA1}-compoments-vivy.surge.sh

      - run:
          name: Post Github Status
          command: |
            curl -i -H "Authorization: token ${GITHUB_REPO_STATUS_ONLY_TOKEN}" -H "Content-Type: application/json" --request POST --data "{\"state\": \"success\", \"target_url\": \"https://${CIRCLE_SHA1}-compoments-vivy.surge.sh\", \"description\": \"Feature deployed!\", \"context\": \"pr-preview\"}" https://api.github.com/repos/VivyTeam/vivy-components/statuses/${CIRCLE_SHA1}

  release:
    docker:
      - image: circleci/node:11.9.0

    working_directory: ~/repo

    steps:
      - attach_workspace:
          at: ~/repo

      # Add the public deploy key from the repository
      # and call checkout to ensure git uses ssh not https
      - add_ssh_keys:
          fingerprints:
            - "67:d4:fc:1c:51:d7:2d:30:96:32:54:7b:cf:33:5a:f8"
      - checkout

      # Update package.json version
      - run: npm version $CIRCLE_TAG && git push origin HEAD:master
      # Deploys static website of storybook.
      - run: npm run build:storybook
      # Builds package.
      - run: npm run build:package
      - run: echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > ~/repo/.npmrc
      - run: npm publish --access public

workflows:
  version: 2
  build-test-preview-publish:
    jobs:
      - build:
          filters:
            tags:
              only: /\d+\.\d+\.\d+/
            branches:
              ignore:
                - master
      - test:
          requires:
            - build
          filters:
            tags:
              only: /\d+\.\d+\.\d+/
            branches:
              ignore:
                - master
      - pr-preview:
          requires:
            - test
          filters:
            branches:
              ignore:
                - master
      - release:
          requires:
            - test
          filters:
            tags:
              only: /\d+\.\d+\.\d+/
            branches:
              ignore: /.*/
