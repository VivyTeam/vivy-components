version: 2
jobs:
  build:
    docker:
    - image: circleci/node:8.11.1

    working_directory: ~/repo

    steps:
    - checkout
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "package.json" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-

    - run: npm install
    - run: npm run linter:check
    - run: npm run build:package
    - run: npm run build:storybook
    # preview what files will be packaged into npm
    - run: ls ./build

    - save_cache:
        paths:
        - node_modules
        key: v1-dependencies-{{ checksum "package.json" }}

  release:
    docker:
    - image: circleci/node:8.11.1

    working_directory: ~/repo

    steps:
    - checkout
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "package.json" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-

    # Update package.json version
    - run: npm version v$CIRCLE_TAG
    - run: git push origin master
    # Update installs
    - run: npm install
    - run: npm run build:storybook
    - run: npm run build:package
    - run: echo '//registry.npmjs.org/:_authToken=${npm_TOKEN}' > ~/repo/.npmrc
    - run: cd ./build
    - run: npm publish --access public

  build_website:
    docker:
    - image: circleci/node:8.11.1

    working_directory: ~/repo

    steps:
    - checkout
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "package.json" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-

    # Update the website branch
    - run: git checkout gh-pages
    - run: npm run build:storybook
    - run: git add storybook-static/ && git commit --allow-empty -m "Update static website"
    - run: git push origin gh-pages

workflows:
  version: 2
  build-and-deploy:
    jobs:
    - release
    - build_website:
        requires:
        - release

